<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        G3Npyza0FEQIv//Z
</value>
  </data>
</root>